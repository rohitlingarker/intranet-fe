import React, { useState } from "react";
import { toast } from "react-toastify";
import axios from "axios";

const CreateRoleModal = ({ onClose }) => {
const [roleName, setRoleName] = useState("");
const [description, setDescription] = useState("");
const [isSubmitting, setIsSubmitting] = useState(false);

const handleCreateRole = async (e) => {
e.preventDefault();

if (!roleName.trim()) {
  toast.error("Role name cannot be empty");
  return;
}

try {
  setIsSubmitting(true);
  // Replace with your actual API endpoint
  const response = await axios.post("/api/roles", {
    role_name: roleName,
    description,
  });

  if (response.status === 201 || response.status === 200) {
    toast.success("Role created successfully!");
    onClose();
  } else {
    toast.error("Failed to create role");
  }
} catch (error) {
  toast.error("Error creating role");
} finally {
  setIsSubmitting(false);
}


};

return (
<div className="fixed inset-0 bg-black bg-opacity-40 flex justify-center items-center z-50">
<div className="bg-white rounded-xl shadow-lg w-full max-w-md p-6">
<h3 className="text-xl font-semibold mb-4 text-gray-800">
Create New Role
</h3>

    <form onSubmit={handleCreateRole}>
      <div className="mb-4">
        <label className="block text-sm font-medium text-gray-700">
          Role Name
        </label>
        <input
          type="text"
          value={roleName}
          onChange={(e) => setRoleName(e.target.value)}
          placeholder="Enter role name"
          className="border border-gray-300 rounded-md px-3 py-2 w-full focus:outline-none focus:ring focus:ring-blue-200"
        />
      </div>

      <div className="mb-4">
        <label className="block text-sm font-medium text-gray-700">
          Description
        </label>
        <textarea
          value={description}
          onChange={(e) => setDescription(e.target.value)}
          placeholder="Enter role description"
          className="border border-gray-300 rounded-md px-3 py-2 w-full h-24 focus:outline-none focus:ring focus:ring-blue-200"
        />
      </div>

      <div className="flex justify-end space-x-3 mt-6">
        <button
          type="button"
          onClick={onClose}
          className="bg-gray-200 text-gray-700 px-4 py-2 rounded-md hover:bg-gray-300"
          disabled={isSubmitting}
        >
          Cancel
        </button>
        <button
          type="submit"
          disabled={isSubmitting}
          className={`${
            isSubmitting ? "bg-blue-300" : "bg-blue-600 hover:bg-blue-700"
          } text-white px-4 py-2 rounded-md`}
        >
          {isSubmitting ? "Creating..." : "Create Role"}
        </button>
      </div>
    </form>
  </div>
</div>


);
};

export default CreateRoleModal;